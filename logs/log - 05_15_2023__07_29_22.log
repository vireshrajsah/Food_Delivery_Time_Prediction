[ 2023-05-15 07:29:23,646 ] 14 root - INFO: TRAINING PIPELINE INITIATED
[ 2023-05-15 07:29:23,647 ] 29 root - INFO: Data ingestion initiated in ingest() at data_ingestion.py
[ 2023-05-15 07:29:23,647 ] 36 root - INFO: filepath: [C:\Users\U1143589\Learning\iNeuron\ML\Food_delivery_time\dataset\food_delivery.csv] received in utils.read_csv
[ 2023-05-15 07:29:23,826 ] 38 root - INFO: csv read and loaded
[ 2023-05-15 07:29:23,854 ] 31 root - INFO: Input file loaded and returned to ingest() at data_ingestion.py, Dataframe shape: (45584, 20)
       ID Delivery_person_ID  Delivery_person_Age  Delivery_person_Ratings  ...  multiple_deliveries  Festival           City  Time_taken (min)
0  0xcdcd      DEHRES17DEL01                 36.0                      4.2  ...                  3.0        No  Metropolitian                46
1  0xd987      KOCRES16DEL01                 21.0                      4.7  ...                  1.0        No  Metropolitian                23
2  0x2784     PUNERES13DEL03                 23.0                      4.7  ...                  1.0        No  Metropolitian                21
3  0xc8b6     LUDHRES15DEL02                 34.0                      4.3  ...                  0.0        No  Metropolitian                20
4  0xdb64      KNPRES14DEL02                 24.0                      4.7  ...                  1.0        No  Metropolitian                41

[5 rows x 20 columns]
[ 2023-05-15 07:29:23,888 ] 34 root - INFO: Train_test_split achieved - train shape: [(31908, 20)], test shape [(13676, 20)]
[ 2023-05-15 07:29:23,888 ] 53 root - INFO: Dataframe Received for saving. Shape: (31908, 20)
[ 2023-05-15 07:29:24,212 ] 55 root - INFO: Dataframe saved as csv to path - [ C:\Users\U1143589\Learning\iNeuron\ML\Food_delivery_time\artifacts\train.csv ]
[ 2023-05-15 07:29:24,212 ] 37 root - INFO: Train csv saved and confirmed from DataIngestor.ingest() at data_ingestion.py
[ 2023-05-15 07:29:24,212 ] 53 root - INFO: Dataframe Received for saving. Shape: (13676, 20)
[ 2023-05-15 07:29:24,348 ] 55 root - INFO: Dataframe saved as csv to path - [ C:\Users\U1143589\Learning\iNeuron\ML\Food_delivery_time\artifacts\test.csv ]
[ 2023-05-15 07:29:24,348 ] 39 root - INFO: Test csv saved and confirmed from DataIngestor.ingest() at data_ingestion.py
[ 2023-05-15 07:29:24,348 ] 41 root - INFO: Data ingestion completed in DataIngestor.ingest() at data_ingestion.py
[ 2023-05-15 07:29:24,355 ] 22 root - INFO: DATA INGESTION COMPLETE
[ 2023-05-15 07:29:24,355 ] 24 root - INFO: transformation INITIATED in Preprocessor.transform() at data_transformation.py
[ 2023-05-15 07:29:24,355 ] 36 root - INFO: filepath: [C:\Users\U1143589\Learning\iNeuron\ML\Food_delivery_time\artifacts\train.csv] received in utils.read_csv
[ 2023-05-15 07:29:24,471 ] 38 root - INFO: csv read and loaded
[ 2023-05-15 07:29:24,471 ] 36 root - INFO: filepath: [C:\Users\U1143589\Learning\iNeuron\ML\Food_delivery_time\artifacts\test.csv] received in utils.read_csv
[ 2023-05-15 07:29:24,520 ] 38 root - INFO: csv read and loaded
[ 2023-05-15 07:29:24,520 ] 29 root - INFO: train and test csv loaded, train shape: (31908, 20), test shape: (13676, 20)
[ 2023-05-15 07:29:24,520 ] 32 root - INFO: CALLING on utils to clean train and test dfs in Preprocessor.transform() at data_transformation.py, train shape: (31908, 20), test shape: (13676, 20)
[ 2023-05-15 07:29:24,520 ] 124 root - INFO: df received for cleaning in clean() at utils.py, shape: (31908, 20)
[ 2023-05-15 07:29:24,529 ] 126 root - INFO: ID column dropped
[ 2023-05-15 07:29:24,616 ] 134 root - INFO: Records with faulty time dropped
[ 2023-05-15 07:29:24,616 ] 136 root - INFO: df cleaning complete in clean() at utils.py, shape: (31908, 19), and returned
[ 2023-05-15 07:29:24,617 ] 124 root - INFO: df received for cleaning in clean() at utils.py, shape: (13676, 20)
[ 2023-05-15 07:29:24,621 ] 126 root - INFO: ID column dropped
[ 2023-05-15 07:29:24,664 ] 134 root - INFO: Records with faulty time dropped
[ 2023-05-15 07:29:24,665 ] 136 root - INFO: df cleaning complete in clean() at utils.py, shape: (13676, 19), and returned
[ 2023-05-15 07:29:24,665 ] 35 root - INFO: clean train and test dfs RECEIVED in Preprocessor.transform() at data_transformation.py, train shape: (25075, 19), test shape: (10743, 19)
[ 2023-05-15 07:29:24,665 ] 38 root - INFO: CALLING on utils to Feature Engineer train and test dfs in Preprocessor.transform() at data_transformation.py, train shape: (25075, 19), test shape: (10743, 19)
[ 2023-05-15 07:29:24,665 ] 184 root - INFO: df received for Feature engineering, shape: (25075, 19) in apply_feature_engineering() at utils.py
[ 2023-05-15 07:29:25,374 ] 187 root - INFO: Time_Orderd and Time_Order_picked columns converted to hours
[ 2023-05-15 07:29:25,958 ] 192 root - INFO: Order_Date split to Order_Day and Order_Month
[ 2023-05-15 07:29:32,735 ] 198 root - INFO: Geo_Distance column added
[ 2023-05-15 07:29:32,735 ] 200 root - INFO: df feature engineering steps complete in apply_feature_engineering() at utils.py, shape: (25075, 21), and returned
[ 2023-05-15 07:29:32,735 ] 184 root - INFO: df received for Feature engineering, shape: (10743, 19) in apply_feature_engineering() at utils.py
[ 2023-05-15 07:29:32,964 ] 187 root - INFO: Time_Orderd and Time_Order_picked columns converted to hours
[ 2023-05-15 07:29:33,195 ] 192 root - INFO: Order_Date split to Order_Day and Order_Month
[ 2023-05-15 07:29:36,025 ] 198 root - INFO: Geo_Distance column added
[ 2023-05-15 07:29:36,025 ] 200 root - INFO: df feature engineering steps complete in apply_feature_engineering() at utils.py, shape: (10743, 21), and returned
[ 2023-05-15 07:29:36,025 ] 41 root - INFO: Feature Engineered train and test dfs RECEIVED in Preprocessor.transform() at data_transformation.py, train shape: (25075, 21), test shape: (10743, 21)
[ 2023-05-15 07:29:36,033 ] 48 root - INFO: X-y split achieved
[ 2023-05-15 07:29:36,033 ] 51 root - INFO: CALLING on utils to transform train and test dfs in Preprocessor.transform() at data_transformation.py, train shape: (25075, 21), test shape: (10743, 21)
[ 2023-05-15 07:29:36,033 ] 256 root - INFO: dfs recieved for fit-transformation in apply_data_transformations() at utils.py, train_shape:(25075, 20), test_shape: (10743, 20)
[ 2023-05-15 07:29:36,138 ] 63 root - INFO: ColumnTransformer(transformers=[('numeric_imputer',
                                 SimpleImputer(strategy='median'),
                                 ['Delivery_person_Age',
                                  'Delivery_person_Ratings',
                                  'Restaurant_latitude', 'Restaurant_longitude',
                                  'Delivery_location_latitude',
                                  'Delivery_location_longitude', 'Time_Orderd',
                                  'Time_Order_picked', 'Vehicle_condition',
                                  'multiple_deliveries', 'Order_Day',
                                  'Order_Month', 'Geo_Distance']),
                                ('categoric_imputation',
                                 SimpleImputer(strategy='most_frequent'),
                                 ['Delivery_person_ID', 'Weather_conditions',
                                  'Road_traffic_density', 'Type_of_order',
                                  'Type_of_vehicle', 'Festival', 'City'])]) received for shelving in shelve_this_preprocessor() at utils.py
[ 2023-05-15 07:29:36,169 ] 73 root - INFO: [ColumnTransformer(transformers=[('numeric_imputer',
                                 SimpleImputer(strategy='median'),
                                 ['Delivery_person_Age',
                                  'Delivery_person_Ratings',
                                  'Restaurant_latitude', 'Restaurant_longitude',
                                  'Delivery_location_latitude',
                                  'Delivery_location_longitude', 'Time_Orderd',
                                  'Time_Order_picked', 'Vehicle_condition',
                                  'multiple_deliveries', 'Order_Day',
                                  'Order_Month', 'Geo_Distance']),
                                ('categoric_imputation',
                                 SimpleImputer(strategy='most_frequent'),
                                 ['Delivery_person_ID', 'Weather_conditions',
                                  'Road_traffic_density', 'Type_of_order',
                                  'Type_of_vehicle', 'Festival', 'City'])])] shelved with identifier [imputer] in shelve_this_preprocessor() at utils.py
[ 2023-05-15 07:29:36,254 ] 278 root - INFO: imputation completed at utils.py, train_shape:(25075, 20), test_shape: (10743, 20)
 number of train columns with null values [0], number of test columns with null values [0]
[ 2023-05-15 07:29:36,261 ] 63 root - INFO: LabelEncoder() received for shelving in shelve_this_preprocessor() at utils.py
[ 2023-05-15 07:29:36,274 ] 73 root - INFO: [LabelEncoder()] shelved with identifier [encoder_Delivery_person_ID] in shelve_this_preprocessor() at utils.py
[ 2023-05-15 07:29:36,286 ] 63 root - INFO: LabelEncoder() received for shelving in shelve_this_preprocessor() at utils.py
[ 2023-05-15 07:29:36,300 ] 73 root - INFO: [LabelEncoder()] shelved with identifier [encoder_Road_traffic_density] in shelve_this_preprocessor() at utils.py
[ 2023-05-15 07:29:36,309 ] 63 root - INFO: LabelEncoder() received for shelving in shelve_this_preprocessor() at utils.py
[ 2023-05-15 07:29:36,322 ] 73 root - INFO: [LabelEncoder()] shelved with identifier [encoder_Type_of_vehicle] in shelve_this_preprocessor() at utils.py
[ 2023-05-15 07:29:36,331 ] 63 root - INFO: LabelEncoder() received for shelving in shelve_this_preprocessor() at utils.py
[ 2023-05-15 07:29:36,344 ] 73 root - INFO: [LabelEncoder()] shelved with identifier [encoder_City] in shelve_this_preprocessor() at utils.py
[ 2023-05-15 07:29:36,353 ] 63 root - INFO: LabelEncoder() received for shelving in shelve_this_preprocessor() at utils.py
[ 2023-05-15 07:29:36,367 ] 73 root - INFO: [LabelEncoder()] shelved with identifier [encoder_Weather_conditions] in shelve_this_preprocessor() at utils.py
[ 2023-05-15 07:29:36,376 ] 63 root - INFO: LabelEncoder() received for shelving in shelve_this_preprocessor() at utils.py
[ 2023-05-15 07:29:36,389 ] 73 root - INFO: [LabelEncoder()] shelved with identifier [encoder_Type_of_order] in shelve_this_preprocessor() at utils.py
[ 2023-05-15 07:29:36,398 ] 63 root - INFO: LabelEncoder() received for shelving in shelve_this_preprocessor() at utils.py
[ 2023-05-15 07:29:36,410 ] 73 root - INFO: [LabelEncoder()] shelved with identifier [encoder_Festival] in shelve_this_preprocessor() at utils.py
[ 2023-05-15 07:29:36,418 ] 291 root - INFO: encoding completed at utils.py, train_shape:(25075, 20), test_shape: (10743, 20)
[ 2023-05-15 07:29:36,442 ] 292 root - INFO: X_train:
  Delivery_person_Age Delivery_person_Ratings Restaurant_latitude Restaurant_longitude  ... Type_of_order Type_of_vehicle Festival City
1                27.0                     4.9            17.45971            78.368855  ...             0               1        0    0
2                38.0                     5.0           17.455894            78.375467  ...             1               0        0    0
3                39.0                     4.9           21.170096            72.789122  ...             2               2        0    0
4                28.0                     4.7                 0.0                  0.0  ...             1               2        0    0
5                36.0                     4.8           11.022169            76.999594  ...             3               2        0    2

[5 rows x 20 columns]
[ 2023-05-15 07:29:36,542 ] 63 root - INFO: ColumnTransformer(transformers=[('scaler', StandardScaler(),
                                 ['Delivery_person_Age',
                                  'Delivery_person_Ratings',
                                  'Restaurant_latitude', 'Restaurant_longitude',
                                  'Delivery_location_latitude',
                                  'Delivery_location_longitude', 'Time_Orderd',
                                  'Time_Order_picked', 'Vehicle_condition',
                                  'multiple_deliveries', 'Order_Day',
                                  'Order_Month', 'Geo_Distance',
                                  'Delivery_person_ID', 'Weather_conditions',
                                  'Road_traffic_density', 'Type_of_order',
                                  'Type_of_vehicle', 'Festival', 'City'])]) received for shelving in shelve_this_preprocessor() at utils.py
[ 2023-05-15 07:29:36,555 ] 73 root - INFO: [ColumnTransformer(transformers=[('scaler', StandardScaler(),
                                 ['Delivery_person_Age',
                                  'Delivery_person_Ratings',
                                  'Restaurant_latitude', 'Restaurant_longitude',
                                  'Delivery_location_latitude',
                                  'Delivery_location_longitude', 'Time_Orderd',
                                  'Time_Order_picked', 'Vehicle_condition',
                                  'multiple_deliveries', 'Order_Day',
                                  'Order_Month', 'Geo_Distance',
                                  'Delivery_person_ID', 'Weather_conditions',
                                  'Road_traffic_density', 'Type_of_order',
                                  'Type_of_vehicle', 'Festival', 'City'])])] shelved with identifier [scaler] in shelve_this_preprocessor() at utils.py
[ 2023-05-15 07:29:36,641 ] 303 root - INFO: scaling completed at utils.py
[ 2023-05-15 07:29:36,641 ] 305 root - INFO: dfs fit-transformation COMPLETED in apply_data_transformations() at utils.py, train_shape:(25075, 20), test_shape: (10743, 20)
[ 2023-05-15 07:29:36,643 ] 53 root - INFO: Transformed train and test dfs RECEIVED in Preprocessor.transform() at data_transformation.py, train shape: (25075, 21), test shape: (10743, 21)
[ 2023-05-15 07:29:36,720 ] 29 root - INFO: DATA PREPROCESSING COMPLETE
[ 2023-05-15 07:29:36,720 ] 39 root - INFO: model training INITIATED in Trainer.train() at model_trainer.py
[ 2023-05-15 07:29:36,722 ] 47 root - INFO: looping over all algorithms initiated
[ 2023-05-15 07:29:36,722 ] 50 root - INFO: CALLING on utils to evaluate algorithm [LinearRegression] from Trainer.train() at model_trainer.py
[ 2023-05-15 07:29:36,775 ] 53 root - INFO: RETURNED to Trainer.train() at model_trainer.py algorithm after model evaluation of [LinearRegression] with object [LinearRegression(), r2_score is [0.5149508099358655]] 
[ 2023-05-15 07:29:36,775 ] 54 root - INFO: algo performance report updated
[ 2023-05-15 07:29:36,775 ] 50 root - INFO: CALLING on utils to evaluate algorithm [Ridge] from Trainer.train() at model_trainer.py
[ 2023-05-15 07:29:36,793 ] 53 root - INFO: RETURNED to Trainer.train() at model_trainer.py algorithm after model evaluation of [Ridge] with object [Ridge(), r2_score is [0.46778196311067943]] 
[ 2023-05-15 07:29:36,793 ] 54 root - INFO: algo performance report updated
[ 2023-05-15 07:29:36,793 ] 50 root - INFO: CALLING on utils to evaluate algorithm [Lasso] from Trainer.train() at model_trainer.py
[ 2023-05-15 07:29:36,827 ] 53 root - INFO: RETURNED to Trainer.train() at model_trainer.py algorithm after model evaluation of [Lasso] with object [Lasso(), r2_score is [0.38110381507739677]] 
[ 2023-05-15 07:29:36,827 ] 54 root - INFO: algo performance report updated
[ 2023-05-15 07:29:36,827 ] 50 root - INFO: CALLING on utils to evaluate algorithm [ElasticNet] from Trainer.train() at model_trainer.py
[ 2023-05-15 07:29:36,863 ] 53 root - INFO: RETURNED to Trainer.train() at model_trainer.py algorithm after model evaluation of [ElasticNet] with object [ElasticNet(), r2_score is [0.3850583304259434]] 
[ 2023-05-15 07:29:36,863 ] 54 root - INFO: algo performance report updated
[ 2023-05-15 07:29:36,866 ] 58 root - INFO: best algorithm evaluated to be [LinearRegression] with object type [<class 'sklearn.linear_model._base.LinearRegression'>]
[ 2023-05-15 07:29:36,885 ] 62 root - INFO: best model: [LinearRegression] fitted with parameters [{'copy_X': True, 'fit_intercept': True, 'n_jobs': None, 'positive': False}]
[ 2023-05-15 07:29:36,885 ] 64 root - INFO: CALLING on utils to pickle best model
[ 2023-05-15 07:29:36,887 ] 66 root - INFO: RETURNED to to Trainer.train() at model_trainer.py with best model pickled at C:\Users\U1143589\Learning\iNeuron\ML\Food_delivery_time\artifacts\model.pkl
[ 2023-05-15 07:29:36,888 ] 68 root - INFO: model training COMPLETE in Trainer.train() at model_trainer.py
[ 2023-05-15 07:29:36,888 ] 36 root - INFO: MODEL TRAINING COMPLETE
[ 2023-05-15 07:29:36,888 ] 39 root - INFO: TRAINING PIPELINE SUCCESSFULLY TERMINATED
