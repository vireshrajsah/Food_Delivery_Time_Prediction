[ 2023-05-16 02:36:08,661 ] 14 root - INFO: TRAINING PIPELINE INITIATED
[ 2023-05-16 02:36:08,662 ] 32 root - INFO: Data ingestion initiated in ingest() at data_ingestion.py
[ 2023-05-16 02:36:08,662 ] 32 root - INFO: filepath: [C:\Users\U1143589\Learning\iNeuron\ML\Food_delivery_time\dataset\food_delivery.csv] RECEIVED in general_utils.read_csv()
[ 2023-05-16 02:36:08,824 ] 34 root - INFO: csv read and LOADED
[ 2023-05-16 02:36:08,855 ] 34 root - INFO: Input file loaded and returned to ingest() at data_ingestion.py, Dataframe shape: (45584, 20)
       ID Delivery_person_ID  Delivery_person_Age  Delivery_person_Ratings  ...  multiple_deliveries  Festival           City  Time_taken (min)
0  0xcdcd      DEHRES17DEL01                 36.0                      4.2  ...                  3.0        No  Metropolitian                46
1  0xd987      KOCRES16DEL01                 21.0                      4.7  ...                  1.0        No  Metropolitian                23
2  0x2784     PUNERES13DEL03                 23.0                      4.7  ...                  1.0        No  Metropolitian                21
3  0xc8b6     LUDHRES15DEL02                 34.0                      4.3  ...                  0.0        No  Metropolitian                20
4  0xdb64      KNPRES14DEL02                 24.0                      4.7  ...                  1.0        No  Metropolitian                41

[5 rows x 20 columns]
[ 2023-05-16 02:36:08,882 ] 37 root - INFO: Train_test_split achieved - train shape: [(31908, 20)], test shape [(13676, 20)]
[ 2023-05-16 02:36:08,883 ] 49 root - INFO: Dataframe RECEIVED for saving. Shape: (31908, 20)
[ 2023-05-16 02:36:09,223 ] 51 root - INFO: Dataframe SAVED as csv to path - [ C:\Users\U1143589\Learning\iNeuron\ML\Food_delivery_time\artifacts\train.csv ]
[ 2023-05-16 02:36:09,223 ] 40 root - INFO: Train csv saved and confirmed from DataIngestor.ingest() at data_ingestion.py
[ 2023-05-16 02:36:09,223 ] 49 root - INFO: Dataframe RECEIVED for saving. Shape: (13676, 20)
[ 2023-05-16 02:36:09,368 ] 51 root - INFO: Dataframe SAVED as csv to path - [ C:\Users\U1143589\Learning\iNeuron\ML\Food_delivery_time\artifacts\test.csv ]
[ 2023-05-16 02:36:09,368 ] 42 root - INFO: Test csv saved and confirmed from DataIngestor.ingest() at data_ingestion.py
[ 2023-05-16 02:36:09,368 ] 44 root - INFO: Data ingestion completed in DataIngestor.ingest() at data_ingestion.py
[ 2023-05-16 02:36:09,377 ] 22 root - INFO: DATA INGESTION COMPLETE
[ 2023-05-16 02:36:09,377 ] 27 root - INFO: transformation INITIATED in Preprocessor.transform() at data_transformation.py
[ 2023-05-16 02:36:09,377 ] 32 root - INFO: filepath: [C:\Users\U1143589\Learning\iNeuron\ML\Food_delivery_time\artifacts\train.csv] RECEIVED in general_utils.read_csv()
[ 2023-05-16 02:36:09,499 ] 34 root - INFO: csv read and LOADED
[ 2023-05-16 02:36:09,499 ] 32 root - INFO: filepath: [C:\Users\U1143589\Learning\iNeuron\ML\Food_delivery_time\artifacts\test.csv] RECEIVED in general_utils.read_csv()
[ 2023-05-16 02:36:09,555 ] 34 root - INFO: csv read and LOADED
[ 2023-05-16 02:36:09,556 ] 32 root - INFO: train and test csv loaded, train shape: (31908, 20), test shape: (13676, 20)
[ 2023-05-16 02:36:09,556 ] 35 root - INFO: CALLING on utils to clean train and test dfs in Preprocessor.transform() at data_transformation.py, train shape: (31908, 20), test shape: (13676, 20)
[ 2023-05-16 02:36:09,556 ] 29 root - INFO: df RECEIVED for cleaning in clean() at data_preparation_utils.py, shape: (31908, 20)
[ 2023-05-16 02:36:09,566 ] 31 root - INFO: ID column dropped
[ 2023-05-16 02:36:09,662 ] 39 root - INFO: Records with faulty time dropped
[ 2023-05-16 02:36:09,687 ] 41 root - INFO: df cleaning COMPLETE in clean() at data_preparation_utils.py, shape: (25125, 19), and returned
   Delivery_person_ID  Delivery_person_Age  Delivery_person_Ratings  ...  Festival           City  Time_taken (min)
1      MYSRES15DEL03                 27.0                      4.6  ...        No          Urban                22
2     CHENRES07DEL01                 25.0                      4.6  ...        No  Metropolitian                18
3      AGRRES09DEL01                 35.0                      4.7  ...        No          Urban                21
4      JAPRES02DEL01                 28.0                      4.7  ...        No          Urban                11
5     HYDRES010DEL02                 24.0                      4.6  ...        No  Metropolitian                13

[5 rows x 19 columns]
[ 2023-05-16 02:36:09,687 ] 29 root - INFO: df RECEIVED for cleaning in clean() at data_preparation_utils.py, shape: (13676, 20)
[ 2023-05-16 02:36:09,692 ] 31 root - INFO: ID column dropped
[ 2023-05-16 02:36:09,734 ] 39 root - INFO: Records with faulty time dropped
[ 2023-05-16 02:36:09,762 ] 41 root - INFO: df cleaning COMPLETE in clean() at data_preparation_utils.py, shape: (10693, 19), and returned
   Delivery_person_ID  Delivery_person_Age  Delivery_person_Ratings  ...  Festival           City  Time_taken (min)
0   RANCHIRES05DEL02                 22.0                      4.7  ...        No  Metropolitian                12
1      JAPRES06DEL01                 27.0                      5.0  ...        No          Urban                16
3     BANGRES09DEL01                 22.0                      4.9  ...        No  Metropolitian                23
4     SURRES010DEL01                 39.0                      4.8  ...        No  Metropolitian                27
5     PUNERES11DEL03                 32.0                      4.9  ...        No          Urban                28

[5 rows x 19 columns]
[ 2023-05-16 02:36:09,763 ] 38 root - INFO: clean train and test dfs RECEIVED in Preprocessor.transform() at data_transformation.py, train shape: (25125, 19), test shape: (10693, 19)
[ 2023-05-16 02:36:09,763 ] 41 root - INFO: CALLING on utils to Feature Engineer train and test dfs in Preprocessor.transform() at data_transformation.py, train shape: (25125, 19), test shape: (10693, 19)
[ 2023-05-16 02:36:09,763 ] 89 root - INFO: df received for Feature engineering, shape: (25125, 19) in apply_feature_engineering() at data_preparation_utils.py
[ 2023-05-16 02:36:10,552 ] 92 root - INFO: Time_Orderd and Time_Order_picked columns converted to hours
[ 2023-05-16 02:36:11,222 ] 97 root - INFO: Order_Date split to Order_Day and Order_Month
[ 2023-05-16 02:36:17,241 ] 103 root - INFO: Geo_Distance column added
[ 2023-05-16 02:36:17,242 ] 105 root - INFO: df feature engineering steps complete in apply_feature_engineering() at data_preparation_utils.py, shape: (25125, 21), and returned
[ 2023-05-16 02:36:17,242 ] 89 root - INFO: df received for Feature engineering, shape: (10693, 19) in apply_feature_engineering() at data_preparation_utils.py
[ 2023-05-16 02:36:17,463 ] 92 root - INFO: Time_Orderd and Time_Order_picked columns converted to hours
[ 2023-05-16 02:36:17,644 ] 97 root - INFO: Order_Date split to Order_Day and Order_Month
[ 2023-05-16 02:36:19,641 ] 103 root - INFO: Geo_Distance column added
[ 2023-05-16 02:36:19,641 ] 105 root - INFO: df feature engineering steps complete in apply_feature_engineering() at data_preparation_utils.py, shape: (10693, 21), and returned
[ 2023-05-16 02:36:19,641 ] 44 root - INFO: Feature Engineered train and test dfs RECEIVED in Preprocessor.transform() at data_transformation.py, train shape: (25125, 21), test shape: (10693, 21)
[ 2023-05-16 02:36:19,647 ] 51 root - INFO: X-y split achieved
[ 2023-05-16 02:36:19,647 ] 54 root - INFO: CALLING on utils to transform train and test dfs in Preprocessor.transform() at data_transformation.py, train shape: (25125, 21), test shape: (10693, 21)
[ 2023-05-16 02:36:19,647 ] 63 root - INFO: dfs recieved for fit-transformation in apply_data_transformations() at data_transformation_utils.py, train_shape:(25125, 20), test_shape: (10693, 20)
[ 2023-05-16 02:36:19,724 ] 59 root - INFO: ColumnTransformer(transformers=[('numeric_imputer',
                                 SimpleImputer(strategy='median'),
                                 ['Delivery_person_Age',
                                  'Delivery_person_Ratings',
                                  'Restaurant_latitude', 'Restaurant_longitude',
                                  'Delivery_location_latitude',
                                  'Delivery_location_longitude', 'Time_Orderd',
                                  'Time_Order_picked', 'Vehicle_condition',
                                  'multiple_deliveries', 'Order_Day',
                                  'Order_Month', 'Geo_Distance']),
                                ('categoric_imputation',
                                 SimpleImputer(strategy='most_frequent'),
                                 ['Delivery_person_ID', 'Weather_conditions',
                                  'Road_traffic_density', 'Type_of_order',
                                  'Type_of_vehicle', 'Festival', 'City'])]) RECEIVED for shelving in shelve_this_preprocessor() at general_utils.py
[ 2023-05-16 02:36:19,743 ] 69 root - INFO: [ColumnTransformer(transformers=[('numeric_imputer',
                                 SimpleImputer(strategy='median'),
                                 ['Delivery_person_Age',
                                  'Delivery_person_Ratings',
                                  'Restaurant_latitude', 'Restaurant_longitude',
                                  'Delivery_location_latitude',
                                  'Delivery_location_longitude', 'Time_Orderd',
                                  'Time_Order_picked', 'Vehicle_condition',
                                  'multiple_deliveries', 'Order_Day',
                                  'Order_Month', 'Geo_Distance']),
                                ('categoric_imputation',
                                 SimpleImputer(strategy='most_frequent'),
                                 ['Delivery_person_ID', 'Weather_conditions',
                                  'Road_traffic_density', 'Type_of_order',
                                  'Type_of_vehicle', 'Festival', 'City'])])] SHELVED with identifier [imputer] in shelve_this_preprocessor() at general_utils.py
[ 2023-05-16 02:36:19,794 ] 85 root - INFO: imputation completed at data_transformation_utils.py, train_shape:(25125, 20), test_shape: (10693, 20)
 number of train columns with null values [0], number of test columns with null values [0]
[ 2023-05-16 02:36:19,799 ] 59 root - INFO: LabelEncoder() RECEIVED for shelving in shelve_this_preprocessor() at general_utils.py
[ 2023-05-16 02:36:19,808 ] 69 root - INFO: [LabelEncoder()] SHELVED with identifier [encoder_Delivery_person_ID] in shelve_this_preprocessor() at general_utils.py
[ 2023-05-16 02:36:19,816 ] 59 root - INFO: LabelEncoder() RECEIVED for shelving in shelve_this_preprocessor() at general_utils.py
[ 2023-05-16 02:36:19,825 ] 69 root - INFO: [LabelEncoder()] SHELVED with identifier [encoder_Road_traffic_density] in shelve_this_preprocessor() at general_utils.py
[ 2023-05-16 02:36:19,831 ] 59 root - INFO: LabelEncoder() RECEIVED for shelving in shelve_this_preprocessor() at general_utils.py
[ 2023-05-16 02:36:19,839 ] 69 root - INFO: [LabelEncoder()] SHELVED with identifier [encoder_Type_of_vehicle] in shelve_this_preprocessor() at general_utils.py
[ 2023-05-16 02:36:19,845 ] 59 root - INFO: LabelEncoder() RECEIVED for shelving in shelve_this_preprocessor() at general_utils.py
[ 2023-05-16 02:36:19,854 ] 69 root - INFO: [LabelEncoder()] SHELVED with identifier [encoder_City] in shelve_this_preprocessor() at general_utils.py
[ 2023-05-16 02:36:19,860 ] 59 root - INFO: LabelEncoder() RECEIVED for shelving in shelve_this_preprocessor() at general_utils.py
[ 2023-05-16 02:36:19,868 ] 69 root - INFO: [LabelEncoder()] SHELVED with identifier [encoder_Weather_conditions] in shelve_this_preprocessor() at general_utils.py
[ 2023-05-16 02:36:19,873 ] 59 root - INFO: LabelEncoder() RECEIVED for shelving in shelve_this_preprocessor() at general_utils.py
[ 2023-05-16 02:36:19,882 ] 69 root - INFO: [LabelEncoder()] SHELVED with identifier [encoder_Type_of_order] in shelve_this_preprocessor() at general_utils.py
[ 2023-05-16 02:36:19,888 ] 59 root - INFO: LabelEncoder() RECEIVED for shelving in shelve_this_preprocessor() at general_utils.py
[ 2023-05-16 02:36:19,898 ] 69 root - INFO: [LabelEncoder()] SHELVED with identifier [encoder_Festival] in shelve_this_preprocessor() at general_utils.py
[ 2023-05-16 02:36:19,903 ] 98 root - INFO: encoding completed at data_transformation_utils.py, train_shape:(25125, 20), test_shape: (10693, 20)
[ 2023-05-16 02:36:19,918 ] 99 root - INFO: X_train:
  Delivery_person_Age Delivery_person_Ratings Restaurant_latitude Restaurant_longitude  ... Type_of_order Type_of_vehicle Festival City
1                27.0                     4.6           12.352058             76.60665  ...             3               2        0    2
2                25.0                     4.6           13.081878            80.248519  ...             2               0        0    0
3                35.0                     4.7                 0.0                  0.0  ...             3               2        0    2
4                28.0                     4.7           26.914142            75.805704  ...             1               1        0    2
5                24.0                     4.6           17.428294            78.404423  ...             3               0        0    0

[5 rows x 20 columns]
[ 2023-05-16 02:36:19,990 ] 59 root - INFO: ColumnTransformer(transformers=[('scaler', StandardScaler(),
                                 ['Delivery_person_Age',
                                  'Delivery_person_Ratings',
                                  'Restaurant_latitude', 'Restaurant_longitude',
                                  'Delivery_location_latitude',
                                  'Delivery_location_longitude', 'Time_Orderd',
                                  'Time_Order_picked', 'Vehicle_condition',
                                  'multiple_deliveries', 'Order_Day',
                                  'Order_Month', 'Geo_Distance',
                                  'Delivery_person_ID', 'Weather_conditions',
                                  'Road_traffic_density', 'Type_of_order',
                                  'Type_of_vehicle', 'Festival', 'City'])]) RECEIVED for shelving in shelve_this_preprocessor() at general_utils.py
[ 2023-05-16 02:36:20,000 ] 69 root - INFO: [ColumnTransformer(transformers=[('scaler', StandardScaler(),
                                 ['Delivery_person_Age',
                                  'Delivery_person_Ratings',
                                  'Restaurant_latitude', 'Restaurant_longitude',
                                  'Delivery_location_latitude',
                                  'Delivery_location_longitude', 'Time_Orderd',
                                  'Time_Order_picked', 'Vehicle_condition',
                                  'multiple_deliveries', 'Order_Day',
                                  'Order_Month', 'Geo_Distance',
                                  'Delivery_person_ID', 'Weather_conditions',
                                  'Road_traffic_density', 'Type_of_order',
                                  'Type_of_vehicle', 'Festival', 'City'])])] SHELVED with identifier [scaler] in shelve_this_preprocessor() at general_utils.py
[ 2023-05-16 02:36:20,068 ] 110 root - INFO: scaling completed at data_transformation_utils.py
[ 2023-05-16 02:36:20,068 ] 112 root - INFO: dfs fit-transformation COMPLETED in apply_data_transformations() at data_transformation_utils.py, train_shape:(25125, 20), test_shape: (10693, 20)
[ 2023-05-16 02:36:20,070 ] 56 root - INFO: Transformed train and test dfs RECEIVED in Preprocessor.transform() at data_transformation.py, train shape: (25125, 21), test shape: (10693, 21)
[ 2023-05-16 02:36:20,108 ] 29 root - INFO: DATA PREPROCESSING COMPLETE
[ 2023-05-16 02:36:20,109 ] 42 root - INFO: model training INITIATED in Trainer.train() at model_trainer.py
[ 2023-05-16 02:36:20,109 ] 50 root - INFO: looping over all algorithms initiated
[ 2023-05-16 02:36:20,110 ] 53 root - INFO: CALLING on utils to evaluate algorithm [LinearRegression] from Trainer.train() at model_trainer.py
[ 2023-05-16 02:36:20,142 ] 56 root - INFO: RETURNED to Trainer.train() at model_trainer.py algorithm after model evaluation of [LinearRegression] with object [LinearRegression(), r2_score is [0.5104500233751552]] 
[ 2023-05-16 02:36:20,142 ] 57 root - INFO: algo performance report updated
[ 2023-05-16 02:36:20,142 ] 53 root - INFO: CALLING on utils to evaluate algorithm [Ridge] from Trainer.train() at model_trainer.py
[ 2023-05-16 02:36:20,156 ] 56 root - INFO: RETURNED to Trainer.train() at model_trainer.py algorithm after model evaluation of [Ridge] with object [Ridge(), r2_score is [0.4634281214151508]] 
[ 2023-05-16 02:36:20,156 ] 57 root - INFO: algo performance report updated
[ 2023-05-16 02:36:20,156 ] 53 root - INFO: CALLING on utils to evaluate algorithm [Lasso] from Trainer.train() at model_trainer.py
[ 2023-05-16 02:36:20,178 ] 56 root - INFO: RETURNED to Trainer.train() at model_trainer.py algorithm after model evaluation of [Lasso] with object [Lasso(), r2_score is [0.3725715968437906]] 
[ 2023-05-16 02:36:20,179 ] 57 root - INFO: algo performance report updated
[ 2023-05-16 02:36:20,179 ] 53 root - INFO: CALLING on utils to evaluate algorithm [ElasticNet] from Trainer.train() at model_trainer.py
[ 2023-05-16 02:36:20,203 ] 56 root - INFO: RETURNED to Trainer.train() at model_trainer.py algorithm after model evaluation of [ElasticNet] with object [ElasticNet(), r2_score is [0.3770061951874353]] 
[ 2023-05-16 02:36:20,203 ] 57 root - INFO: algo performance report updated
[ 2023-05-16 02:36:20,203 ] 60 root - INFO: CALLING on utils to publish algo performance report from Trainer.train() at model_trainer.py
[ 2023-05-16 02:36:20,828 ] 42 root - INFO: Algo performance report published in path [C:\Users\U1143589\Learning\iNeuron\ML\Food_delivery_time\artifacts\algorithm_performance_report.xlsx] in publish_algo_performance_report() at model_training_utils.py
[ 2023-05-16 02:36:20,828 ] 62 root - INFO: Algorithm performance report PUBLISHED
[ 2023-05-16 02:36:20,829 ] 66 root - INFO: best algorithm evaluated to be [LinearRegression] with object type [<class 'sklearn.linear_model._base.LinearRegression'>]
[ 2023-05-16 02:36:20,845 ] 70 root - INFO: best model: [LinearRegression] fitted with parameters [{'copy_X': True, 'fit_intercept': True, 'n_jobs': None, 'positive': False}]
[ 2023-05-16 02:36:20,845 ] 72 root - INFO: CALLING on utils to pickle best model
[ 2023-05-16 02:36:20,845 ] 96 root - INFO: pickle request for [LinearRegression()] RECEIVED in pickle_this_object() at general_utils.py
[ 2023-05-16 02:36:20,847 ] 99 root - INFO: [LinearRegression()] PICKLED to path [C:\Users\U1143589\Learning\iNeuron\ML\Food_delivery_time\artifacts\model.pkl] in pickle_this_object() at general_utils.py
[ 2023-05-16 02:36:20,847 ] 74 root - INFO: RETURNED to to Trainer.train() at model_trainer.py with best model pickled at C:\Users\U1143589\Learning\iNeuron\ML\Food_delivery_time\artifacts\model.pkl
[ 2023-05-16 02:36:20,847 ] 76 root - INFO: model training COMPLETE in Trainer.train() at model_trainer.py
[ 2023-05-16 02:36:20,847 ] 36 root - INFO: MODEL TRAINING COMPLETE
[ 2023-05-16 02:36:20,847 ] 39 root - INFO: TRAINING PIPELINE SUCCESSFULLY TERMINATED
